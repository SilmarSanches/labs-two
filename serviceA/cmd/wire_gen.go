// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"labs-two-service-a/config"
	"labs-two-service-a/internal/infra/services"
	"labs-two-service-a/internal/infra/web"
	"labs-two-service-a/internal/usecases"
)

import (
	_ "labs-two-service-a/docs"
)

// Injectors from wire.go:

func NewConfig() *config.AppSettings {
	appSettings := config.ProvideConfig()
	return appSettings
}

func NewGetCepUseCase() *usecases.GetCepUseCase {
	appSettings := config.ProvideConfig()
	httpClient := services.NewHttpClient()
	serviceCep := services.NewServiceCep(httpClient, appSettings)
	getCepUseCase := usecases.NewGetCepUseCase(appSettings, serviceCep)
	return getCepUseCase
}

func NewGetCepHandler() *web.GetCepHandler {
	appSettings := config.ProvideConfig()
	httpClient := services.NewHttpClient()
	serviceCep := services.NewServiceCep(httpClient, appSettings)
	getCepUseCase := usecases.NewGetCepUseCase(appSettings, serviceCep)
	getCepHandler := web.NewGetCepHandler(appSettings, getCepUseCase, serviceCep)
	return getCepHandler
}

// wire.go:

var ProviderConfig = wire.NewSet(config.ProvideConfig)

var ProviderHttpClient = wire.NewSet(services.NewHttpClient)

var ProviderCep = wire.NewSet(services.NewServiceCep, wire.Bind(new(services.ServiceCepInterface), new(*services.ServiceCep)))

var ProviderGlobal = wire.NewSet(
	ProviderHttpClient,
	ProviderConfig,
	ProviderCep,
)

var ProviderUseCase = wire.NewSet(usecases.NewGetCepUseCase, wire.Bind(new(usecases.GetCepUseCaseInterface), new(*usecases.GetCepUseCase)))

var ProviderHandler = wire.NewSet(web.NewGetCepHandler)
